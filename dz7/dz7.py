#
import copy
import math
import random

# Решить с помощью генераторов списка.
#
# 1: Даны два списка фруктов. Получить список фруктов, присутствующих в обоих исходных списках.
#     Примечание: Списки фруктов создайте вручную в начале файла.

list1 = [1, 4, 65, 78, 8, 'w', 'h']
list2 = [13, 44, 665, 78, 8, 'w', 'yh']
# классика
list3 = []
for i in range(len(list1)):
    if list1[i] == list2[i]:
        list3.append(list1[i])
print(f'классика---->  #1  {list3}')
print('//////////////////////////1')
result = [n for n in list1 if n in list2]
print(f'---->генератор {result}')
# 2: Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# Элемент кратен 3,
# Элемент положительный,
# Элемент не кратен 4.
#
# Примечание: Список с целыми числами создайте вручную в начале файла.
# Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.

ran_num = [1, 4, -65, 78, 8, 9]

result = [n for n in ran_num if n > 0 and n % 3 == 0 and n % 4 != 0]
print(f'-----> 2 {result}')

# 3. Напишите функцию которая принимает на вход список. Функция создает
# из этого списка новый список из квадратных корней чисел (если число положительное) и самих чисел
# (если число отрицательное) и возвращает результат (желательно применить
# генератор и тернарный оператор при необходимости).
# результате работы функции исходный список не должен измениться.
# Например:
# old_list = [1, -3, 4]
# result = [1, -3, 2]
##     Примечание: Список с целыми числами создайте вручную в начале файла.
#     Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.
old_list = [1, -3, 41, 4, -65, 78, 8, 9, 4, 65, 78, 8]


def new_list_sq(ol):
    result = ol.copy()
    result = [n if n < 0 else round(math.sqrt(n), 3) for n in result]
    return result


print(new_list_sq(old_list))
print(old_list)
# 4. Написать функцию которая принимает на вход число от 1 до 100.
# Если число равно 13, функция поднимает исключительную ситуации ValueError
# иначе возвращает введенное число, возведенное в квадрат.
# Далее написать основной код программы. Пользователь вводит число.
# Введенное число передаем параметром в написанную функцию и печатаем результат,
# который вернула функция. Обработать возможность возникновения исключительной ситуации,
# которая поднимается внутри функции.
def dif_num(un):

        if un == 13:
            raise ValueError('нето число ')
        else:
            result = un ** 2
            return result

user_num = int(input('Введите : '))



try:
    result = dif_num(user_num)

except ValueError as a:
    print(f'----> {a}' )

else:
    print(f'all right ---> {result}')